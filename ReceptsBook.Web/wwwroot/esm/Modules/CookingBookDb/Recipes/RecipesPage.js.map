{
  "version": 3,
  "sources": ["../../../../../Modules/CookingBookDb/Recipes/RecipesPage.ts", "../../../../../Modules/CookingBookDb/Recipes/RecipesGrid.ts", "../../../../../Modules/ServerTypes/CookingBookDb/RecipesColumns.ts", "../../../../../Modules/ServerTypes/CookingBookDb/RecipesForm.ts", "../../../../../Modules/ServerTypes/CookingBookDb/RecipesRow.ts", "../../../../../Modules/ServerTypes/CookingBookDb/RecipesService.ts", "../../../../../Modules/CookingBookDb/Recipes/RecipesDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { RecipesGrid } from './RecipesGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new RecipesGrid($('#GridDiv')).element);\r\n}", "\uFEFFimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { RecipesColumns, RecipesRow, RecipesService } from '../../ServerTypes/CookingBookDb';\r\nimport { RecipesDialog } from './RecipesDialog';\r\n\r\n@Decorators.registerClass('ReceptsBook.CookingBookDb.RecipesGrid')\r\nexport class RecipesGrid extends EntityGrid<RecipesRow, any> {\r\n    protected getColumnsKey() { return RecipesColumns.columnsKey; }\r\n    protected getDialogType() { return RecipesDialog; }\r\n    protected getRowDefinition() { return RecipesRow; }\r\n    protected getService() { return RecipesService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n}", "\uFEFFexport class RecipesColumns {\r\n    static columnsKey = 'CookingBookDb.Recipes';\r\n}", "\uFEFFimport { StringEditor, DateEditor, TextAreaEditor, ImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface RecipesForm {\n    Title: StringEditor;\n    CreatedDate: DateEditor;\n    Description: TextAreaEditor;\n    Ingredients: TextAreaEditor;\n    \u0421ooking: TextAreaEditor;\n    Recommendations: StringEditor;\n    PrimaryImage: ImageUploadEditor;\n}\n\nexport class RecipesForm extends PrefixedContext {\n    static formKey = 'CookingBookDb.Recipes';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!RecipesForm.init)  {\n            RecipesForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = TextAreaEditor;\n            var w3 = ImageUploadEditor;\n\n            initFormType(RecipesForm, [\n                'Title', w0,\n                'CreatedDate', w1,\n                'Description', w2,\n                'Ingredients', w2,\n                '\u0421ooking', w2,\n                'Recommendations', w0,\n                'PrimaryImage', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface RecipesRow {\n    RecipeId?: number;\n    Title?: string;\n    CreatedDate?: string;\n    Description?: string;\n    \u0421ooking?: string;\n    Recommendations?: string;\n    PrimaryImage?: string;\n    Ingredients?: string;\n}\n\nexport abstract class RecipesRow {\n    static readonly idProperty = 'RecipeId';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'CookingBookDb.Recipes';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<RecipesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { RecipesRow } from \"./RecipesRow\";\n\nexport namespace RecipesService {\n    export const baseUrl = 'CookingBookDb/Recipes';\n\n    export declare function Create(request: SaveRequest<RecipesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<RecipesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RecipesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RecipesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"CookingBookDb/Recipes/Create\",\n        Update: \"CookingBookDb/Recipes/Update\",\n        Delete: \"CookingBookDb/Recipes/Delete\",\n        Retrieve: \"CookingBookDb/Recipes/Retrieve\",\n        List: \"CookingBookDb/Recipes/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>RecipesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { RecipesForm, RecipesRow, RecipesService } from '../../ServerTypes/CookingBookDb';\r\n\r\n@Decorators.registerClass('ReceptsBook.CookingBookDb.RecipesDialog')\r\nexport class RecipesDialog extends EntityDialog<RecipesRow, any> {\r\n    protected getFormKey() { return RecipesForm.formKey; }\r\n    protected getRowDefinition() { return RecipesRow; }\r\n    protected getService() { return RecipesService.baseUrl; }\r\n\r\n    protected form = new RecipesForm(this.idPrefix);\r\n}"],
  "mappings": "mFAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAuC,SCAhC,IAAMC,EAAN,KAAqB,CAE7B,EAFcC,EAAAD,EAAA,kBAAAA,EACH,WAAa,wBCDvB,IAAAE,EAA6F,SAC9FC,EAA6B,SAYtB,IAAMC,EAAN,cAA0B,iBAAgB,CAI7C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAY,KAAO,CACpBA,EAAY,KAAO,GAEnB,IAAIE,EAAK,eACLC,EAAK,aACLC,EAAK,iBACLC,EAAK,uBAET,gBAAaL,EAAa,CACtB,QAASE,EACT,cAAeC,EACf,cAAeC,EACf,cAAeA,EACf,eAAWA,EACX,kBAAmBF,EACnB,eAAgBG,CACpB,CAAC,CACL,CACJ,CACJ,EA1BaC,EAANN,EAAMO,EAAAD,EAAA,eAAAA,EACF,QAAU,wBCdpB,IAAAE,EAA4B,SAatB,IAAeC,EAAf,KAA0B,CAUjC,EAVsBC,EAAAD,EAAA,cAAAA,EACF,WAAa,WADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,wBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAwB,ECtBpD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,wBAQVA,EAAA,QAAU,CACnB,OAAQ,+BACR,OAAQ,+BACR,OAAQ,+BACR,SAAU,iCACV,KAAM,4BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAgBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC1C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SAInC,IAAMC,EAAN,cAA4B,cAA8B,CAA1D,kCAKH,KAAU,KAAO,IAAIC,EAAY,KAAK,QAAQ,EAJpC,YAAa,CAAE,OAAOA,EAAY,OAAS,CAC3C,kBAAmB,CAAE,OAAOC,CAAY,CACxC,YAAa,CAAE,OAAOC,EAAe,OAAS,CAG5D,EANaC,EAAAJ,EAAA,iBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,yCAAyC,GACtDL,GLCN,IAAMM,EAAN,cAA0B,YAA4B,CAC/C,eAAgB,CAAE,OAAOC,EAAe,UAAY,CACpD,eAAgB,CAAE,OAAOC,CAAe,CACxC,kBAAmB,CAAE,OAAOC,CAAY,CACxC,YAAa,CAAE,OAAOC,EAAe,OAAS,CAExD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATaC,EAAAN,EAAA,eAAAA,EAANO,EAAA,CADN,aAAW,cAAc,uCAAuC,GACpDP,GDFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAY,EAAE,UAAU,CAAC,EAAE,OAAO,CACjE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "RecipesColumns", "__name", "import_corelib", "import_q", "_RecipesForm", "prefix", "w0", "w1", "w2", "w3", "RecipesForm", "__name", "import_q", "RecipesRow", "__name", "import_q", "RecipesService", "x", "r", "s", "o", "import_corelib", "RecipesDialog", "RecipesForm", "RecipesRow", "RecipesService", "__name", "__decorateClass", "RecipesGrid", "RecipesColumns", "RecipesDialog", "RecipesRow", "RecipesService", "container", "__name", "__decorateClass", "pageInit", "RecipesGrid", "__name"]
}
